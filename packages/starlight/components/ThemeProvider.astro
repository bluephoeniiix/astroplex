---
import type { Props } from '../props';
import Icon from '../user-components/Icon.astro';
---

{/* This is intentionally inlined to avoid FOUC. */}
<script is:inline>
	window.StarlightThemeProvider = (() => {
		const storedTheme =
			typeof localStorage !== 'undefined' && localStorage.getItem('starlight-theme');
		const theme =
			storedTheme ||
			(window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'dark');
		document.documentElement.dataset.theme = theme === 'dark' ? 'dark' : 'dark';
		return {
			updatePickers(theme = storedTheme || 'dark') {
				document.querySelectorAll('starlight-theme-select').forEach((picker) => {
					const select = picker.querySelector('select');
					if (select) select.value = theme;
					/** @type {HTMLTemplateElement | null} */
					const tmpl = document.querySelector(`#theme-icons`);
					const newIcon = tmpl && tmpl.content.querySelector('.' + theme);
					if (newIcon) {
						const oldIcon = picker.querySelector('svg.label-icon');
						if (oldIcon) {
							oldIcon.replaceChildren(...newIcon.cloneNode(true).childNodes);
						}
					}
				});
			},
		};
	})();
</script>

<template id="theme-icons">
	<Icon name="moon" class="dark" />
</template>
